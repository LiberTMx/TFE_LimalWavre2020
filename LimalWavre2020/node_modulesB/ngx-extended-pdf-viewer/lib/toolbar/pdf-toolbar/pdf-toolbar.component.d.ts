import { OnInit, TemplateRef, EventEmitter } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class PdfToolbarComponent implements OnInit {
    customToolbar: TemplateRef<any>;
    mobileFriendlyZoomScale: number;
    primaryMenuVisible: boolean;
    showBookmarkButton: boolean;
    showDownloadButton: boolean;
    showFindButton: boolean | undefined;
    showOpenFileButton: boolean;
    showPrintButton: boolean;
    showPagingButtons: boolean;
    showPresentationModeButton: boolean;
    showSecondaryToolbarButton: boolean;
    showSidebarButton: boolean;
    showZoomButtons: boolean;
    textLayer: boolean | undefined;
    toolbarPaddingTop: string;
    toolbarWidth: string;
    zoomChange: EventEmitter<string | number>;
    constructor();
    ngOnInit(): void;
    emitZoomChange(value: string | number): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PdfToolbarComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PdfToolbarComponent, "pdf-toolbar", never, {
    "mobileFriendlyZoomScale": "mobileFriendlyZoomScale";
    "primaryMenuVisible": "primaryMenuVisible";
    "showBookmarkButton": "showBookmarkButton";
    "showDownloadButton": "showDownloadButton";
    "showFindButton": "showFindButton";
    "showOpenFileButton": "showOpenFileButton";
    "showPrintButton": "showPrintButton";
    "showPagingButtons": "showPagingButtons";
    "showPresentationModeButton": "showPresentationModeButton";
    "showSecondaryToolbarButton": "showSecondaryToolbarButton";
    "showSidebarButton": "showSidebarButton";
    "showZoomButtons": "showZoomButtons";
    "textLayer": "textLayer";
    "toolbarPaddingTop": "toolbarPaddingTop";
    "toolbarWidth": "toolbarWidth";
    "customToolbar": "customToolbar";
}, {
    "zoomChange": "zoomChange";
}, never>;
}

//# sourceMappingURL=pdf-toolbar.component.d.ts.map