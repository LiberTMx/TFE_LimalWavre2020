{"version":3,"sources":["C:/wamp64/www/wawaMax/node_modules/primeng/fesm2015/primeng-menubar.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wKAkHE;;;;;;;;;;;;;;;;;;;;;;+CAsB6C,AAgChC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uFAcb;;;;;;;;;;;;;;;;;;;;;;2CAsByC,AAe/B;;;;;EAEV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAOgB","file":"primeng-menubar.js","sourcesContent":["import { Renderer2, ChangeDetectorRef, Input, Component, ElementRef, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { RouterModule } from '@angular/router';\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nlet MenubarSub = class MenubarSub {\n    constructor(renderer, cd) {\n        this.renderer = renderer;\n        this.cd = cd;\n        this.autoZIndex = true;\n        this.baseZIndex = 0;\n        this.menuHoverActive = false;\n    }\n    get parentActive() {\n        return this._parentActive;\n    }\n    set parentActive(value) {\n        if (!this.root) {\n            this._parentActive = value;\n            if (!value)\n                this.activeItem = null;\n        }\n    }\n    onItemMenuClick(event, item, menuitem) {\n        if (!this.autoDisplay) {\n            if (menuitem.disabled) {\n                return;\n            }\n            this.activeItem = this.activeMenu ? (this.activeMenu.isEqualNode(item) ? null : item) : item;\n            let nextElement = item.children[0].nextElementSibling;\n            if (nextElement) {\n                let sublist = nextElement.children[0];\n                if (this.autoZIndex) {\n                    sublist.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n                }\n                if (this.root) {\n                    sublist.style.top = DomHandler.getOuterHeight(item.children[0]) + 'px';\n                    sublist.style.left = '0px';\n                }\n                else {\n                    sublist.style.top = '0px';\n                    sublist.style.left = DomHandler.getOuterWidth(item.children[0]) + 'px';\n                }\n            }\n            this.menuClick = true;\n            this.menuHoverActive = this.activeMenu ? (!this.activeMenu.isEqualNode(item)) : true;\n            this.activeMenu = this.activeMenu ? (this.activeMenu.isEqualNode(item) ? null : item) : item;\n            this.bindEventListener();\n        }\n    }\n    bindEventListener() {\n        if (!this.documentClickListener) {\n            this.documentClickListener = this.renderer.listen('document', 'click', (event) => {\n                if (!this.menuClick) {\n                    this.activeItem = null;\n                    this.menuHoverActive = false;\n                    this.activeMenu = false;\n                }\n                this.menuClick = false;\n            });\n        }\n    }\n    onItemMouseEnter(event, item, menuitem) {\n        if (this.autoDisplay || (!this.autoDisplay && this.root && this.menuHoverActive)) {\n            if (menuitem.disabled) {\n                return;\n            }\n            if ((this.activeItem && !this.activeItem.isEqualNode(item) || !this.activeItem)) {\n                this.activeItem = item;\n                let nextElement = item.children[0].nextElementSibling;\n                if (nextElement) {\n                    let sublist = nextElement.children[0];\n                    sublist.style.zIndex = String(++DomHandler.zindex);\n                    if (this.root) {\n                        sublist.style.top = DomHandler.getOuterHeight(item.children[0]) + 'px';\n                        sublist.style.left = '0px';\n                    }\n                    else {\n                        sublist.style.top = '0px';\n                        sublist.style.left = DomHandler.getOuterWidth(item.children[0]) + 'px';\n                    }\n                }\n                this.activeMenu = item;\n            }\n        }\n    }\n    itemClick(event, item) {\n        if (item.disabled) {\n            event.preventDefault();\n            return;\n        }\n        if (!item.url) {\n            event.preventDefault();\n        }\n        if (item.command) {\n            item.command({\n                originalEvent: event,\n                item: item\n            });\n        }\n        this.activeItem = null;\n    }\n    listClick(event) {\n        if (this.autoDisplay) {\n            this.activeItem = null;\n        }\n    }\n    ngOnDestroy() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n};\nMenubarSub.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ChangeDetectorRef }\n];\n__decorate([\n    Input()\n], MenubarSub.prototype, \"item\", void 0);\n__decorate([\n    Input()\n], MenubarSub.prototype, \"root\", void 0);\n__decorate([\n    Input()\n], MenubarSub.prototype, \"autoDisplay\", void 0);\n__decorate([\n    Input()\n], MenubarSub.prototype, \"autoZIndex\", void 0);\n__decorate([\n    Input()\n], MenubarSub.prototype, \"baseZIndex\", void 0);\n__decorate([\n    Input()\n], MenubarSub.prototype, \"parentActive\", null);\nMenubarSub = __decorate([\n    Component({\n        selector: 'p-menubarSub',\n        template: `\n        <ul [ngClass]=\"{'ui-menubar-root-list':root, 'ui-widget-content ui-corner-all ui-submenu-list ui-shadow':!root}\"\n            (click)=\"listClick($event)\">\n            <ng-template ngFor let-child [ngForOf]=\"(root ? item : item.items)\">\n                <li *ngIf=\"child.separator\" class=\"ui-menu-separator ui-widget-content\" [ngClass]=\"{'ui-helper-hidden': child.visible === false}\">\n                <li *ngIf=\"!child.separator\" #listItem [ngClass]=\"{'ui-menuitem ui-corner-all':true,\n                        'ui-menu-parent':child.items,'ui-menuitem-active':listItem==activeItem,'ui-helper-hidden': child.visible === false}\"\n                        (mouseenter)=\"onItemMouseEnter($event,listItem,child)\" (click)=\"onItemMenuClick($event, listItem, child)\">\n                    <a *ngIf=\"!child.routerLink\" [href]=\"child.url||'#'\" [attr.data-automationid]=\"child.automationId\" [attr.target]=\"child.target\" [attr.title]=\"child.title\" [attr.id]=\"child.id\" (click)=\"itemClick($event, child)\"\n                         [ngClass]=\"{'ui-menuitem-link ui-corner-all':true,'ui-state-disabled':child.disabled}\" [ngStyle]=\"child.style\" [class]=\"child.styleClass\" \n                         [attr.tabindex]=\"child.tabindex ? child.tabindex : '0'\" [attr.aria-haspopup]=\"item.items != null\" [attr.aria-expanded]=\"item === activeItem\">\n                        <span class=\"ui-menuitem-icon\" *ngIf=\"child.icon\" [ngClass]=\"child.icon\"></span>\n                        <span class=\"ui-menuitem-text\">{{child.label}}</span>\n                        <span class=\"ui-submenu-icon pi pi-fw\" *ngIf=\"child.items\" [ngClass]=\"{'pi-caret-down':root,'pi-caret-right':!root}\"></span>\n                    </a>\n                    <a *ngIf=\"child.routerLink\" [routerLink]=\"child.routerLink\" [attr.data-automationid]=\"child.automationId\" [queryParams]=\"child.queryParams\" [routerLinkActive]=\"'ui-state-active'\" [routerLinkActiveOptions]=\"child.routerLinkActiveOptions||{exact:false}\"\n                        [attr.target]=\"child.target\" [attr.title]=\"child.title\" [attr.id]=\"child.id\" [attr.tabindex]=\"child.tabindex ? child.tabindex : '0'\" role=\"menuitem\"\n                        (click)=\"itemClick($event, child)\" [ngClass]=\"{'ui-menuitem-link ui-corner-all':true,'ui-state-disabled':child.disabled}\" [ngStyle]=\"child.style\" [class]=\"child.styleClass\">\n                        <span class=\"ui-menuitem-icon\" *ngIf=\"child.icon\" [ngClass]=\"child.icon\"></span>\n                        <span class=\"ui-menuitem-text\">{{child.label}}</span>\n                        <span class=\"ui-submenu-icon pi pi-fw\" *ngIf=\"child.items\" [ngClass]=\"{'pi-caret-down':root,'pi-caret-right':!root}\"></span>\n                    </a>\n                    <p-menubarSub class=\"ui-submenu\" [parentActive]=\"listItem==activeItem\" [item]=\"child\" *ngIf=\"child.items\" [autoDisplay]=\"true\"></p-menubarSub>\n                </li>\n            </ng-template>\n        </ul>\n    `\n    })\n], MenubarSub);\nlet Menubar = class Menubar {\n    constructor(el, renderer) {\n        this.el = el;\n        this.renderer = renderer;\n        this.autoZIndex = true;\n        this.baseZIndex = 0;\n    }\n    get autoDisplay() {\n        return this._autoDisplay;\n    }\n    set utc(_utc) {\n        console.log(\"AutoDisplay property is deprecated and functionality is not available.\");\n    }\n};\nMenubar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 }\n];\n__decorate([\n    Input()\n], Menubar.prototype, \"model\", void 0);\n__decorate([\n    Input()\n], Menubar.prototype, \"style\", void 0);\n__decorate([\n    Input()\n], Menubar.prototype, \"styleClass\", void 0);\n__decorate([\n    Input()\n], Menubar.prototype, \"autoZIndex\", void 0);\n__decorate([\n    Input()\n], Menubar.prototype, \"baseZIndex\", void 0);\n__decorate([\n    Input()\n], Menubar.prototype, \"autoDisplay\", null);\nMenubar = __decorate([\n    Component({\n        selector: 'p-menubar',\n        template: `\n        <div [ngClass]=\"{'ui-menubar ui-widget ui-widget-content ui-corner-all':true}\" [class]=\"styleClass\" [ngStyle]=\"style\">\n            <p-menubarSub [item]=\"model\" root=\"root\" [baseZIndex]=\"baseZIndex\" [autoZIndex]=\"autoZIndex\">\n                <ng-content></ng-content>\n            </p-menubarSub>\n            <div class=\"ui-menubar-custom\">\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `\n    })\n], Menubar);\nlet MenubarModule = class MenubarModule {\n};\nMenubarModule = __decorate([\n    NgModule({\n        imports: [CommonModule, RouterModule],\n        exports: [Menubar, RouterModule],\n        declarations: [Menubar, MenubarSub]\n    })\n], MenubarModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Menubar, MenubarModule, MenubarSub };\n"]}