{"version":3,"file":"mdb-auto-completer.component.d.ts","sources":["C:/wamp64/www/wawaMax/node_modules/ng-uikit-pro-standard/lib/pro/auto-completer/components/mdb-auto-completer.component.d.ts"],"sourcesContent":["import { AfterContentInit, ElementRef, EventEmitter, Renderer2, QueryList, OnDestroy } from '@angular/core';\r\nimport { MdbOptionComponent } from './mdb-option.component';\r\nimport { ISelectedOption } from '../interfaces/selected-option.interface';\r\nimport { Observable } from 'rxjs';\r\nexport declare class MdbAutoCompleterComponent implements AfterContentInit, OnDestroy {\r\n    private renderer;\r\n    private el;\r\n    textNoResults: string;\r\n    clearButton: boolean;\r\n    clearButtonTabIndex: number;\r\n    appendToBody: boolean;\r\n    disabled: boolean;\r\n    get visibleOptions(): number;\r\n    set visibleOptions(value: number);\r\n    _visibleOptions: number;\r\n    get optionHeight(): any;\r\n    set optionHeight(value: any);\r\n    _optionHeight: number;\r\n    get dropdownHeight(): number;\r\n    set dropdownHeight(value: number);\r\n    _dropdownHeight: number;\r\n    displayValue: ((value: any) => string) | null;\r\n    select: EventEmitter<{\r\n        text: string;\r\n        element: any;\r\n    }>;\r\n    selected: EventEmitter<{\r\n        text: string;\r\n        element: any;\r\n    }>;\r\n    optionList: Array<any>;\r\n    mdbOptions: QueryList<MdbOptionComponent>;\r\n    dropdown: ElementRef;\r\n    noResultsEl: ElementRef;\r\n    private _destroy;\r\n    private utils;\r\n    origin: ElementRef;\r\n    parameters: {\r\n        left: number;\r\n        top: number;\r\n        width: number;\r\n        bottom: number;\r\n        inputHeight: number;\r\n    };\r\n    private _isDropdownOpen;\r\n    private _allItems;\r\n    private _isOpen;\r\n    private _selectedItemIndex;\r\n    private _selectedItem;\r\n    private _selectedItemChanged;\r\n    private _isBrowser;\r\n    constructor(renderer: Renderer2, el: ElementRef, platformId: string);\r\n    private _listenToOptionClick;\r\n    private _handleOptionClick;\r\n    setSelectedItem(item: ISelectedOption): void;\r\n    getSelectedItem(): ISelectedOption;\r\n    selectedItemChanged(): Observable<any>;\r\n    isOpen(): boolean;\r\n    _calculatePosition(): void;\r\n    private _calculateAppendPosition;\r\n    show(): void;\r\n    hide(): void;\r\n    isDropdownOpen(): Observable<any>;\r\n    removeHighlight(index: number): void;\r\n    highlightRow(index: number): void;\r\n    navigateUsingKeyboard(event: any): void;\r\n    moveHighlightedIntoView(type: string): void;\r\n    updatePosition(parameters: {\r\n        left: number;\r\n        top: number;\r\n        width: number;\r\n        bottom: number;\r\n    }): void;\r\n    appendDropdown(): void;\r\n    setSingleOptionHeight(): void;\r\n    ngAfterContentInit(): void;\r\n    ngOnDestroy(): void;\r\n}\r\n"],"names":[],"mappings":"AAAA;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;"}